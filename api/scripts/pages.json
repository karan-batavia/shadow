[{"name":"Append","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Append","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/-append/index.html","searchKeys":["Append","Append","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Append"]},{"name":"First","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.First","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/-first/index.html","searchKeys":["First","First","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.First"]},{"name":"Latest","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Latest","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/-latest/index.html","searchKeys":["Latest","Latest","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Latest"]},{"name":"abstract class LegacyShadowPlugin : Plugin<Project> ","description":"com.github.jengelman.gradle.plugins.shadow.legacy.LegacyShadowPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow.legacy/-legacy-shadow-plugin/index.html","searchKeys":["LegacyShadowPlugin","abstract class LegacyShadowPlugin : Plugin<Project> ","com.github.jengelman.gradle.plugins.shadow.legacy.LegacyShadowPlugin"]},{"name":"abstract class ShadowApplicationPlugin : Plugin<Project> ","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/index.html","searchKeys":["ShadowApplicationPlugin","abstract class ShadowApplicationPlugin : Plugin<Project> ","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin"]},{"name":"abstract class ShadowBasePlugin : Plugin<Project> ","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/index.html","searchKeys":["ShadowBasePlugin","abstract class ShadowBasePlugin : Plugin<Project> ","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin"]},{"name":"abstract class ShadowExtension(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowExtension","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-extension/index.html","searchKeys":["ShadowExtension","abstract class ShadowExtension(project: Project)","com.github.jengelman.gradle.plugins.shadow.ShadowExtension"]},{"name":"abstract class ShadowJar : Jar, ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/index.html","searchKeys":["ShadowJar","abstract class ShadowJar : Jar, ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"]},{"name":"abstract class ShadowJavaPlugin constructor(softwareComponentFactory: SoftwareComponentFactory) : Plugin<Project> ","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/index.html","searchKeys":["ShadowJavaPlugin","abstract class ShadowJavaPlugin constructor(softwareComponentFactory: SoftwareComponentFactory) : Plugin<Project> ","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin"]},{"name":"abstract class ShadowPlugin : Plugin<Project> ","description":"com.github.jengelman.gradle.plugins.shadow.ShadowPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-plugin/index.html","searchKeys":["ShadowPlugin","abstract class ShadowPlugin : Plugin<Project> ","com.github.jengelman.gradle.plugins.shadow.ShadowPlugin"]},{"name":"abstract fun <R : Relocator> relocate(clazz: Class<R>, action: Action<R>?): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/relocate.html","searchKeys":["relocate","abstract fun <R : Relocator> relocate(clazz: Class<R>, action: Action<R>?): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate"]},{"name":"abstract fun <T : Transformer> transform(clazz: Class<T>, action: Action<T>?): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/transform.html","searchKeys":["transform","abstract fun <T : Transformer> transform(clazz: Class<T>, action: Action<T>?): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.transform"]},{"name":"abstract fun append(resourcePath: String): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.append","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/append.html","searchKeys":["append","abstract fun append(resourcePath: String): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.append"]},{"name":"abstract fun append(resourcePath: String, separator: String): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.append","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/append.html","searchKeys":["append","abstract fun append(resourcePath: String, separator: String): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.append"]},{"name":"abstract fun applyToSourceContent(sourceContent: String): String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.applyToSourceContent","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/apply-to-source-content.html","searchKeys":["applyToSourceContent","abstract fun applyToSourceContent(sourceContent: String): String","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.applyToSourceContent"]},{"name":"abstract fun canRelocateClass(className: String): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.canRelocateClass","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/can-relocate-class.html","searchKeys":["canRelocateClass","abstract fun canRelocateClass(className: String): Boolean","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.canRelocateClass"]},{"name":"abstract fun canRelocatePath(path: String): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.canRelocatePath","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/can-relocate-path.html","searchKeys":["canRelocatePath","abstract fun canRelocatePath(path: String): Boolean","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.canRelocatePath"]},{"name":"abstract fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/can-transform-resource.html","searchKeys":["canTransformResource","abstract fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.canTransformResource"]},{"name":"abstract fun dependencies(action: Action<DependencyFilter>?): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.dependencies","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/dependencies.html","searchKeys":["dependencies","abstract fun dependencies(action: Action<DependencyFilter>?): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.dependencies"]},{"name":"abstract fun dependency(dependency: Dependency): Spec<ResolvedDependency>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.dependency","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/dependency.html","searchKeys":["dependency","abstract fun dependency(dependency: Dependency): Spec<ResolvedDependency>","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.dependency"]},{"name":"abstract fun dependency(dependencyNotation: Any): Spec<ResolvedDependency>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.dependency","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/dependency.html","searchKeys":["dependency","abstract fun dependency(dependencyNotation: Any): Spec<ResolvedDependency>","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.dependency"]},{"name":"abstract fun exclude(spec: Spec<ResolvedDependency>): DependencyFilter","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.exclude","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/exclude.html","searchKeys":["exclude","abstract fun exclude(spec: Spec<ResolvedDependency>): DependencyFilter","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.exclude"]},{"name":"abstract fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","abstract fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.hasTransformedResource"]},{"name":"abstract fun include(spec: Spec<ResolvedDependency>): DependencyFilter","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.include","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/include.html","searchKeys":["include","abstract fun include(spec: Spec<ResolvedDependency>): DependencyFilter","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.include"]},{"name":"abstract fun inheritFrom(vararg inheritPaths: Any): InheritManifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.InheritManifest.inheritFrom","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-inherit-manifest/inherit-from.html","searchKeys":["inheritFrom","abstract fun inheritFrom(vararg inheritPaths: Any): InheritManifest","com.github.jengelman.gradle.plugins.shadow.tasks.InheritManifest.inheritFrom"]},{"name":"abstract fun inheritFrom(vararg inheritPaths: Any, action: Action<*>?): InheritManifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.InheritManifest.inheritFrom","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-inherit-manifest/inherit-from.html","searchKeys":["inheritFrom","abstract fun inheritFrom(vararg inheritPaths: Any, action: Action<*>?): InheritManifest","com.github.jengelman.gradle.plugins.shadow.tasks.InheritManifest.inheritFrom"]},{"name":"abstract fun mergeGroovyExtensionModules(): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeGroovyExtensionModules","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/merge-groovy-extension-modules.html","searchKeys":["mergeGroovyExtensionModules","abstract fun mergeGroovyExtensionModules(): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeGroovyExtensionModules"]},{"name":"abstract fun mergeServiceFiles(): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeServiceFiles","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/merge-service-files.html","searchKeys":["mergeServiceFiles","abstract fun mergeServiceFiles(): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeServiceFiles"]},{"name":"abstract fun mergeServiceFiles(action: Action<ServiceFileTransformer>?): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeServiceFiles","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/merge-service-files.html","searchKeys":["mergeServiceFiles","abstract fun mergeServiceFiles(action: Action<ServiceFileTransformer>?): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeServiceFiles"]},{"name":"abstract fun mergeServiceFiles(rootPath: String): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeServiceFiles","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/merge-service-files.html","searchKeys":["mergeServiceFiles","abstract fun mergeServiceFiles(rootPath: String): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.mergeServiceFiles"]},{"name":"abstract fun minimize(): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.minimize","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/minimize.html","searchKeys":["minimize","abstract fun minimize(): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.minimize"]},{"name":"abstract fun minimize(action: Action<DependencyFilter>?): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.minimize","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/minimize.html","searchKeys":["minimize","abstract fun minimize(action: Action<DependencyFilter>?): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.minimize"]},{"name":"abstract fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","abstract fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.modifyOutputStream"]},{"name":"abstract fun project(notation: Map<String, *>): Spec<ResolvedDependency>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.project","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/project.html","searchKeys":["project","abstract fun project(notation: Map<String, *>): Spec<ResolvedDependency>","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.project"]},{"name":"abstract fun project(path: String): Spec<ResolvedDependency>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.project","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/project.html","searchKeys":["project","abstract fun project(path: String): Spec<ResolvedDependency>","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.project"]},{"name":"abstract fun relocate(clazz: Class<Relocator>): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/relocate.html","searchKeys":["relocate","abstract fun relocate(clazz: Class<Relocator>): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate"]},{"name":"abstract fun relocate(pattern: String, destination: String): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/relocate.html","searchKeys":["relocate","abstract fun relocate(pattern: String, destination: String): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate"]},{"name":"abstract fun relocate(pattern: String, destination: String, action: Action<SimpleRelocator>?): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/relocate.html","searchKeys":["relocate","abstract fun relocate(pattern: String, destination: String, action: Action<SimpleRelocator>?): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate"]},{"name":"abstract fun relocate(relocator: Relocator): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/relocate.html","searchKeys":["relocate","abstract fun relocate(relocator: Relocator): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.relocate"]},{"name":"abstract fun relocateClass(context: RelocateClassContext): String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.relocateClass","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/relocate-class.html","searchKeys":["relocateClass","abstract fun relocateClass(context: RelocateClassContext): String","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.relocateClass"]},{"name":"abstract fun relocatePath(context: RelocatePathContext): String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.relocatePath","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/relocate-path.html","searchKeys":["relocatePath","abstract fun relocatePath(context: RelocatePathContext): String","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.relocatePath"]},{"name":"abstract fun resolve(configuration: Configuration): FileCollection","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.resolve","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/resolve.html","searchKeys":["resolve","abstract fun resolve(configuration: Configuration): FileCollection","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.resolve"]},{"name":"abstract fun resolve(configurations: Collection<Configuration>): FileCollection","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.resolve","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/resolve.html","searchKeys":["resolve","abstract fun resolve(configurations: Collection<Configuration>): FileCollection","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter.resolve"]},{"name":"abstract fun transform(clazz: Class<Transformer>): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/transform.html","searchKeys":["transform","abstract fun transform(clazz: Class<Transformer>): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.transform"]},{"name":"abstract fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/transform.html","searchKeys":["transform","abstract fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.transform"]},{"name":"abstract fun transform(transformer: Transformer): ShadowSpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/transform.html","searchKeys":["transform","abstract fun transform(transformer: Transformer): ShadowSpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec.transform"]},{"name":"annotation class CacheableRelocator","description":"com.github.jengelman.gradle.plugins.shadow.relocation.CacheableRelocator","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-cacheable-relocator/index.html","searchKeys":["CacheableRelocator","annotation class CacheableRelocator","com.github.jengelman.gradle.plugins.shadow.relocation.CacheableRelocator"]},{"name":"annotation class CacheableTransformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.CacheableTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-cacheable-transformer/index.html","searchKeys":["CacheableTransformer","annotation class CacheableTransformer","com.github.jengelman.gradle.plugins.shadow.transformers.CacheableTransformer"]},{"name":"class Builder","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-builder/index.html","searchKeys":["Builder","class Builder","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder"]},{"name":"const val COMPONENTS_XML_PATH: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.Companion.COMPONENTS_XML_PATH","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/-companion/-c-o-m-p-o-n-e-n-t-s_-x-m-l_-p-a-t-h.html","searchKeys":["COMPONENTS_XML_PATH","const val COMPONENTS_XML_PATH: String","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.Companion.COMPONENTS_XML_PATH"]},{"name":"const val COMPONENT_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.COMPONENT_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/-c-o-m-p-o-n-e-n-t_-n-a-m-e.html","searchKeys":["COMPONENT_NAME","const val COMPONENT_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.COMPONENT_NAME"]},{"name":"const val CONFIGURATION_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.CONFIGURATION_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/-c-o-n-f-i-g-u-r-a-t-i-o-n_-n-a-m-e.html","searchKeys":["CONFIGURATION_NAME","const val CONFIGURATION_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.CONFIGURATION_NAME"]},{"name":"const val DEFAULT_SEPARATOR: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.Companion.DEFAULT_SEPARATOR","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/-companion/-d-e-f-a-u-l-t_-s-e-p-a-r-a-t-o-r.html","searchKeys":["DEFAULT_SEPARATOR","const val DEFAULT_SEPARATOR: String","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.Companion.DEFAULT_SEPARATOR"]},{"name":"const val DISTRIBUTION_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.DISTRIBUTION_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/-d-i-s-t-r-i-b-u-t-i-o-n_-n-a-m-e.html","searchKeys":["DISTRIBUTION_NAME","const val DISTRIBUTION_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.DISTRIBUTION_NAME"]},{"name":"const val EXTENSION_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.EXTENSION_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/-e-x-t-e-n-s-i-o-n_-n-a-m-e.html","searchKeys":["EXTENSION_NAME","const val EXTENSION_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.EXTENSION_NAME"]},{"name":"const val GROUP_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.GROUP_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/-g-r-o-u-p_-n-a-m-e.html","searchKeys":["GROUP_NAME","const val GROUP_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.GROUP_NAME"]},{"name":"const val KEY_EXTENSION_CLASSES: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_EXTENSION_CLASSES","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-k-e-y_-e-x-t-e-n-s-i-o-n_-c-l-a-s-s-e-s.html","searchKeys":["KEY_EXTENSION_CLASSES","const val KEY_EXTENSION_CLASSES: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_EXTENSION_CLASSES"]},{"name":"const val KEY_MODULE_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_MODULE_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-k-e-y_-m-o-d-u-l-e_-n-a-m-e.html","searchKeys":["KEY_MODULE_NAME","const val KEY_MODULE_NAME: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_MODULE_NAME"]},{"name":"const val KEY_MODULE_VERSION: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_MODULE_VERSION","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-k-e-y_-m-o-d-u-l-e_-v-e-r-s-i-o-n.html","searchKeys":["KEY_MODULE_VERSION","const val KEY_MODULE_VERSION: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_MODULE_VERSION"]},{"name":"const val KEY_STATIC_EXTENSION_CLASSES: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_STATIC_EXTENSION_CLASSES","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-k-e-y_-s-t-a-t-i-c_-e-x-t-e-n-s-i-o-n_-c-l-a-s-s-e-s.html","searchKeys":["KEY_STATIC_EXTENSION_CLASSES","const val KEY_STATIC_EXTENSION_CLASSES: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.KEY_STATIC_EXTENSION_CLASSES"]},{"name":"const val MERGED_MODULE_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.MERGED_MODULE_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-m-e-r-g-e-d_-m-o-d-u-l-e_-n-a-m-e.html","searchKeys":["MERGED_MODULE_NAME","const val MERGED_MODULE_NAME: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.MERGED_MODULE_NAME"]},{"name":"const val MERGED_MODULE_VERSION: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.MERGED_MODULE_VERSION","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-m-e-r-g-e-d_-m-o-d-u-l-e_-v-e-r-s-i-o-n.html","searchKeys":["MERGED_MODULE_VERSION","const val MERGED_MODULE_VERSION: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.MERGED_MODULE_VERSION"]},{"name":"const val PATH_GROOVY_EXTENSION_MODULE_DESCRIPTOR: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.PATH_GROOVY_EXTENSION_MODULE_DESCRIPTOR","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-p-a-t-h_-g-r-o-o-v-y_-e-x-t-e-n-s-i-o-n_-m-o-d-u-l-e_-d-e-s-c-r-i-p-t-o-r.html","searchKeys":["PATH_GROOVY_EXTENSION_MODULE_DESCRIPTOR","const val PATH_GROOVY_EXTENSION_MODULE_DESCRIPTOR: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.PATH_GROOVY_EXTENSION_MODULE_DESCRIPTOR"]},{"name":"const val PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/-p-a-t-h_-l-e-g-a-c-y_-g-r-o-o-v-y_-e-x-t-e-n-s-i-o-n_-m-o-d-u-l-e_-d-e-s-c-r-i-p-t-o-r.html","searchKeys":["PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR","const val PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR: String","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion.PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR"]},{"name":"const val SHADOW: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.SHADOW","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/-s-h-a-d-o-w.html","searchKeys":["SHADOW","const val SHADOW: String","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.SHADOW"]},{"name":"const val SHADOW_INSTALL_TASK_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.SHADOW_INSTALL_TASK_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-companion/-s-h-a-d-o-w_-i-n-s-t-a-l-l_-t-a-s-k_-n-a-m-e.html","searchKeys":["SHADOW_INSTALL_TASK_NAME","const val SHADOW_INSTALL_TASK_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.SHADOW_INSTALL_TASK_NAME"]},{"name":"const val SHADOW_JAR_TASK_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.SHADOW_JAR_TASK_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/-companion/-s-h-a-d-o-w_-j-a-r_-t-a-s-k_-n-a-m-e.html","searchKeys":["SHADOW_JAR_TASK_NAME","const val SHADOW_JAR_TASK_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.SHADOW_JAR_TASK_NAME"]},{"name":"const val SHADOW_RUNTIME_ELEMENTS_CONFIGURATION_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.SHADOW_RUNTIME_ELEMENTS_CONFIGURATION_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/-companion/-s-h-a-d-o-w_-r-u-n-t-i-m-e_-e-l-e-m-e-n-t-s_-c-o-n-f-i-g-u-r-a-t-i-o-n_-n-a-m-e.html","searchKeys":["SHADOW_RUNTIME_ELEMENTS_CONFIGURATION_NAME","const val SHADOW_RUNTIME_ELEMENTS_CONFIGURATION_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.SHADOW_RUNTIME_ELEMENTS_CONFIGURATION_NAME"]},{"name":"const val SHADOW_RUN_TASK_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.SHADOW_RUN_TASK_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-companion/-s-h-a-d-o-w_-r-u-n_-t-a-s-k_-n-a-m-e.html","searchKeys":["SHADOW_RUN_TASK_NAME","const val SHADOW_RUN_TASK_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.SHADOW_RUN_TASK_NAME"]},{"name":"const val SHADOW_SCRIPTS_TASK_NAME: String","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.SHADOW_SCRIPTS_TASK_NAME","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-companion/-s-h-a-d-o-w_-s-c-r-i-p-t-s_-t-a-s-k_-n-a-m-e.html","searchKeys":["SHADOW_SCRIPTS_TASK_NAME","const val SHADOW_SCRIPTS_TASK_NAME: String","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.SHADOW_SCRIPTS_TASK_NAME"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.ShadowApplicationPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-shadow-application-plugin.html","searchKeys":["ShadowApplicationPlugin","constructor()","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.ShadowApplicationPlugin"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.ShadowBasePlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-shadow-base-plugin.html","searchKeys":["ShadowBasePlugin","constructor()","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.ShadowBasePlugin"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.ShadowPlugin.ShadowPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-plugin/-shadow-plugin.html","searchKeys":["ShadowPlugin","constructor()","com.github.jengelman.gradle.plugins.shadow.ShadowPlugin.ShadowPlugin"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.legacy.LegacyShadowPlugin.LegacyShadowPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow.legacy/-legacy-shadow-plugin/-legacy-shadow-plugin.html","searchKeys":["LegacyShadowPlugin","constructor()","com.github.jengelman.gradle.plugins.shadow.legacy.LegacyShadowPlugin.LegacyShadowPlugin"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.ShadowJar","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/-shadow-jar.html","searchKeys":["ShadowJar","constructor()","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.ShadowJar"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheLicenseResourceTransformer.ApacheLicenseResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-license-resource-transformer/-apache-license-resource-transformer.html","searchKeys":["ApacheLicenseResourceTransformer","constructor()","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheLicenseResourceTransformer.ApacheLicenseResourceTransformer"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.ComponentsXmlResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/-components-xml-resource-transformer.html","searchKeys":["ComponentsXmlResourceTransformer","constructor()","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.ComponentsXmlResourceTransformer"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.GroovyExtensionModuleTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-groovy-extension-module-transformer.html","searchKeys":["GroovyExtensionModuleTransformer","constructor()","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.GroovyExtensionModuleTransformer"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.Log4j2PluginsCacheFileTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-log4j2-plugins-cache-file-transformer/-log4j2-plugins-cache-file-transformer.html","searchKeys":["Log4j2PluginsCacheFileTransformer","constructor()","com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.Log4j2PluginsCacheFileTransformer"]},{"name":"constructor()","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.Builder","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-builder/-builder.html","searchKeys":["Builder","constructor()","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.Builder"]},{"name":"constructor(className: String)","description":"com.github.jengelman.gradle.plugins.shadow.relocation.RelocateClassContext.RelocateClassContext","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocate-class-context/-relocate-class-context.html","searchKeys":["RelocateClassContext","constructor(className: String)","com.github.jengelman.gradle.plugins.shadow.relocation.RelocateClassContext.RelocateClassContext"]},{"name":"constructor(fileResolver: FileResolver, internalManifest: DefaultManifest = DefaultManifest(fileResolver))","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.DefaultInheritManifest","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-default-inherit-manifest/-default-inherit-manifest.html","searchKeys":["DefaultInheritManifest","constructor(fileResolver: FileResolver, internalManifest: DefaultManifest = DefaultManifest(fileResolver))","com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.DefaultInheritManifest"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.ApacheNoticeResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/-apache-notice-resource-transformer.html","searchKeys":["ApacheNoticeResourceTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.ApacheNoticeResourceTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.AppendingTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/-appending-transformer.html","searchKeys":["AppendingTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.AppendingTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.DontIncludeResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-dont-include-resource-transformer/-dont-include-resource-transformer.html","searchKeys":["DontIncludeResourceTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.DontIncludeResourceTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.IncludeResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/-include-resource-transformer.html","searchKeys":["IncludeResourceTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.IncludeResourceTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.ManifestAppenderTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/-manifest-appender-transformer.html","searchKeys":["ManifestAppenderTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.ManifestAppenderTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.ManifestResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/-manifest-resource-transformer.html","searchKeys":["ManifestResourceTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.ManifestResourceTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.PropertiesFileTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-properties-file-transformer.html","searchKeys":["PropertiesFileTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.PropertiesFileTransformer"]},{"name":"constructor(objectFactory: ObjectFactory)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.XmlAppendingTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/-xml-appending-transformer.html","searchKeys":["XmlAppendingTransformer","constructor(objectFactory: ObjectFactory)","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.XmlAppendingTransformer"]},{"name":"constructor(path: String)","description":"com.github.jengelman.gradle.plugins.shadow.relocation.RelocatePathContext.RelocatePathContext","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocate-path-context/-relocate-path-context.html","searchKeys":["RelocatePathContext","constructor(path: String)","com.github.jengelman.gradle.plugins.shadow.relocation.RelocatePathContext.RelocatePathContext"]},{"name":"constructor(path: String, inputStream: InputStream, relocators: Set<Relocator> = emptySet())","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.TransformerContext","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-transformer-context.html","searchKeys":["TransformerContext","constructor(path: String, inputStream: InputStream, relocators: Set<Relocator> = emptySet())","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.TransformerContext"]},{"name":"constructor(pattern: String? = null, shadedPattern: String? = null, includes: List<String>? = null, excludes: List<String>? = null, rawString: Boolean = false)","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.SimpleRelocator","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/-simple-relocator.html","searchKeys":["SimpleRelocator","constructor(pattern: String? = null, shadedPattern: String? = null, includes: List<String>? = null, excludes: List<String>? = null, rawString: Boolean = false)","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.SimpleRelocator"]},{"name":"constructor(patternSet: PatternSet = PatternSet()\n    .include(SERVICES_PATTERN)\n    .exclude(PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR))","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.ServiceFileTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/-service-file-transformer.html","searchKeys":["ServiceFileTransformer","constructor(patternSet: PatternSet = PatternSet()\n    .include(SERVICES_PATTERN)\n    .exclude(PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR))","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.ServiceFileTransformer"]},{"name":"constructor(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowExtension.ShadowExtension","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-extension/-shadow-extension.html","searchKeys":["ShadowExtension","constructor(project: Project)","com.github.jengelman.gradle.plugins.shadow.ShadowExtension.ShadowExtension"]},{"name":"constructor(softwareComponentFactory: SoftwareComponentFactory)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.ShadowJavaPlugin","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/-shadow-java-plugin.html","searchKeys":["ShadowJavaPlugin","constructor(softwareComponentFactory: SoftwareComponentFactory)","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.ShadowJavaPlugin"]},{"name":"constructor(zipFile: File, zosProvider: (File) -> ZipOutputStream, documentationRegistry: DocumentationRegistry, transformers: Set<Transformer>, relocators: Set<Relocator>, unusedClasses: Set<String>, preserveFileTimestamps: Boolean, encoding: String?)","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.ShadowCopyAction","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-copy-action/-shadow-copy-action.html","searchKeys":["ShadowCopyAction","constructor(zipFile: File, zosProvider: (File) -> ZipOutputStream, documentationRegistry: DocumentationRegistry, transformers: Set<Transformer>, relocators: Set<Relocator>, unusedClasses: Set<String>, preserveFileTimestamps: Boolean, encoding: String?)","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.ShadowCopyAction"]},{"name":"data class TransformerContext constructor(val path: String, val inputStream: InputStream, val relocators: Set<Relocator> = emptySet())","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/index.html","searchKeys":["TransformerContext","data class TransformerContext constructor(val path: String, val inputStream: InputStream, val relocators: Set<Relocator> = emptySet())","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext"]},{"name":"enum MergeStrategy : Enum<PropertiesFileTransformer.MergeStrategy> ","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/index.html","searchKeys":["MergeStrategy","enum MergeStrategy : Enum<PropertiesFileTransformer.MergeStrategy> ","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy"]},{"name":"fun <T : Transformer> Class<T>.create(objectFactory: ObjectFactory): T","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.Companion.create","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/-companion/create.html","searchKeys":["create","fun <T : Transformer> Class<T>.create(objectFactory: ObjectFactory): T","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.Companion.create"]},{"name":"fun build(): TransformerContext","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.build","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-builder/build.html","searchKeys":["build","fun build(): TransformerContext","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.build"]},{"name":"fun builder(): TransformerContext.Builder","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Companion.builder","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-companion/builder.html","searchKeys":["builder","fun builder(): TransformerContext.Builder","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Companion.builder"]},{"name":"fun component(publication: MavenPublication)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowExtension.component","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-extension/component.html","searchKeys":["component","fun component(publication: MavenPublication)","com.github.jengelman.gradle.plugins.shadow.ShadowExtension.component"]},{"name":"fun from(value: String): PropertiesFileTransformer.MergeStrategy","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Companion.from","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/-companion/from.html","searchKeys":["from","fun from(value: String): PropertiesFileTransformer.MergeStrategy","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Companion.from"]},{"name":"fun inputStream(inputStream: InputStream): TransformerContext.Builder","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.inputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-builder/input-stream.html","searchKeys":["inputStream","fun inputStream(inputStream: InputStream): TransformerContext.Builder","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.inputStream"]},{"name":"fun path(path: String): TransformerContext.Builder","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.path","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-builder/path.html","searchKeys":["path","fun path(path: String): TransformerContext.Builder","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.path"]},{"name":"fun relocators(relocators: Set<Relocator>): TransformerContext.Builder","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.relocators","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-builder/relocators.html","searchKeys":["relocators","fun relocators(relocators: Set<Relocator>): TransformerContext.Builder","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Builder.relocators"]},{"name":"fun valueOf(value: String): PropertiesFileTransformer.MergeStrategy","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.valueOf","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PropertiesFileTransformer.MergeStrategy","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.valueOf"]},{"name":"fun values(): Array<PropertiesFileTransformer.MergeStrategy>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.values","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/values.html","searchKeys":["values","fun values(): Array<PropertiesFileTransformer.MergeStrategy>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.values"]},{"name":"interface DependencyFilter : Serializable","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-dependency-filter/index.html","searchKeys":["DependencyFilter","interface DependencyFilter : Serializable","com.github.jengelman.gradle.plugins.shadow.tasks.DependencyFilter"]},{"name":"interface InheritManifest : Manifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.InheritManifest","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-inherit-manifest/index.html","searchKeys":["InheritManifest","interface InheritManifest : Manifest","com.github.jengelman.gradle.plugins.shadow.tasks.InheritManifest"]},{"name":"interface Relocator","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/index.html","searchKeys":["Relocator","interface Relocator","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator"]},{"name":"interface ShadowSpec : CopySpec","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-spec/index.html","searchKeys":["ShadowSpec","interface ShadowSpec : CopySpec","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowSpec"]},{"name":"interface Transformer : Named","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/index.html","searchKeys":["Transformer","interface Transformer : Named","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-copy-action/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.Companion"]},{"name":"object Companion","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Companion","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/-companion/index.html","searchKeys":["Companion","object Companion","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.Companion"]},{"name":"object NoOpTransformer : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-no-op-transformer/index.html","searchKeys":["NoOpTransformer","object NoOpTransformer : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer"]},{"name":"open class ApacheLicenseResourceTransformer : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheLicenseResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-license-resource-transformer/index.html","searchKeys":["ApacheLicenseResourceTransformer","open class ApacheLicenseResourceTransformer : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheLicenseResourceTransformer"]},{"name":"open class ApacheNoticeResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/index.html","searchKeys":["ApacheNoticeResourceTransformer","open class ApacheNoticeResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer"]},{"name":"open class AppendingTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/index.html","searchKeys":["AppendingTransformer","open class AppendingTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer"]},{"name":"open class ComponentsXmlResourceTransformer : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/index.html","searchKeys":["ComponentsXmlResourceTransformer","open class ComponentsXmlResourceTransformer : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer"]},{"name":"open class DefaultInheritManifest constructor(fileResolver: FileResolver, internalManifest: DefaultManifest = DefaultManifest(fileResolver)) : InheritManifest, Manifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-default-inherit-manifest/index.html","searchKeys":["DefaultInheritManifest","open class DefaultInheritManifest constructor(fileResolver: FileResolver, internalManifest: DefaultManifest = DefaultManifest(fileResolver)) : InheritManifest, Manifest","com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest"]},{"name":"open class DontIncludeResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-dont-include-resource-transformer/index.html","searchKeys":["DontIncludeResourceTransformer","open class DontIncludeResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer"]},{"name":"open class GroovyExtensionModuleTransformer : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/index.html","searchKeys":["GroovyExtensionModuleTransformer","open class GroovyExtensionModuleTransformer : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer"]},{"name":"open class IncludeResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/index.html","searchKeys":["IncludeResourceTransformer","open class IncludeResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer"]},{"name":"open class Log4j2PluginsCacheFileTransformer : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-log4j2-plugins-cache-file-transformer/index.html","searchKeys":["Log4j2PluginsCacheFileTransformer","open class Log4j2PluginsCacheFileTransformer : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer"]},{"name":"open class ManifestAppenderTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/index.html","searchKeys":["ManifestAppenderTransformer","open class ManifestAppenderTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer"]},{"name":"open class ManifestResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/index.html","searchKeys":["ManifestResourceTransformer","open class ManifestResourceTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer"]},{"name":"open class PropertiesFileTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/index.html","searchKeys":["PropertiesFileTransformer","open class PropertiesFileTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer"]},{"name":"open class ServiceFileTransformer(patternSet: PatternSet = PatternSet()\n    .include(SERVICES_PATTERN)\n    .exclude(PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR)) : Transformer, PatternFilterable","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/index.html","searchKeys":["ServiceFileTransformer","open class ServiceFileTransformer(patternSet: PatternSet = PatternSet()\n    .include(SERVICES_PATTERN)\n    .exclude(PATH_LEGACY_GROOVY_EXTENSION_MODULE_DESCRIPTOR)) : Transformer, PatternFilterable","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer"]},{"name":"open class ShadowCopyAction(zipFile: File, zosProvider: (File) -> ZipOutputStream, documentationRegistry: DocumentationRegistry, transformers: Set<Transformer>, relocators: Set<Relocator>, unusedClasses: Set<String>, preserveFileTimestamps: Boolean, encoding: String?) : CopyAction","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-copy-action/index.html","searchKeys":["ShadowCopyAction","open class ShadowCopyAction(zipFile: File, zosProvider: (File) -> ZipOutputStream, documentationRegistry: DocumentationRegistry, transformers: Set<Transformer>, relocators: Set<Relocator>, unusedClasses: Set<String>, preserveFileTimestamps: Boolean, encoding: String?) : CopyAction","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction"]},{"name":"open class SimpleRelocator constructor(pattern: String? = null, shadedPattern: String? = null, includes: List<String>? = null, excludes: List<String>? = null, rawString: Boolean = false) : Relocator","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/index.html","searchKeys":["SimpleRelocator","open class SimpleRelocator constructor(pattern: String? = null, shadedPattern: String? = null, includes: List<String>? = null, excludes: List<String>? = null, rawString: Boolean = false) : Relocator","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator"]},{"name":"open class XmlAppendingTransformer constructor(val objectFactory: ObjectFactory) : Transformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/index.html","searchKeys":["XmlAppendingTransformer","open class XmlAppendingTransformer constructor(val objectFactory: ObjectFactory) : Transformer","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer"]},{"name":"open fun append(name: String, value: Comparable<*>): ManifestAppenderTransformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.append","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/append.html","searchKeys":["append","open fun append(name: String, value: Comparable<*>): ManifestAppenderTransformer","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.append"]},{"name":"open fun attributes(attributes: Map<String, Attributes>): ManifestResourceTransformer","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.attributes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/attributes.html","searchKeys":["attributes","open fun attributes(attributes: Map<String, Attributes>): ManifestResourceTransformer","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.attributes"]},{"name":"open fun exclude(pattern: String): SimpleRelocator","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.exclude","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/exclude.html","searchKeys":["exclude","open fun exclude(pattern: String): SimpleRelocator","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.exclude"]},{"name":"open fun include(pattern: String): SimpleRelocator","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.include","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/include.html","searchKeys":["include","open fun include(pattern: String): SimpleRelocator","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.include"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.equals","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.equals"]},{"name":"open override fun <R : Relocator> relocate(clazz: Class<R>, action: Action<R>?): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocate.html","searchKeys":["relocate","open override fun <R : Relocator> relocate(clazz: Class<R>, action: Action<R>?): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate"]},{"name":"open override fun <T : Transformer> transform(clazz: Class<T>, action: Action<T>?): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/transform.html","searchKeys":["transform","open override fun <T : Transformer> transform(clazz: Class<T>, action: Action<T>?): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transform"]},{"name":"open override fun append(resourcePath: String): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.append","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/append.html","searchKeys":["append","open override fun append(resourcePath: String): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.append"]},{"name":"open override fun append(resourcePath: String, separator: String): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.append","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/append.html","searchKeys":["append","open override fun append(resourcePath: String, separator: String): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.append"]},{"name":"open override fun apply(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.apply","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.apply"]},{"name":"open override fun apply(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.apply","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.apply"]},{"name":"open override fun apply(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.apply","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.apply"]},{"name":"open override fun apply(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.ShadowPlugin.apply","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","com.github.jengelman.gradle.plugins.shadow.ShadowPlugin.apply"]},{"name":"open override fun apply(project: Project)","description":"com.github.jengelman.gradle.plugins.shadow.legacy.LegacyShadowPlugin.apply","location":"shadow/com.github.jengelman.gradle.plugins.shadow.legacy/-legacy-shadow-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","com.github.jengelman.gradle.plugins.shadow.legacy.LegacyShadowPlugin.apply"]},{"name":"open override fun applyToSourceContent(sourceContent: String): String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.applyToSourceContent","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/apply-to-source-content.html","searchKeys":["applyToSourceContent","open override fun applyToSourceContent(sourceContent: String): String","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.applyToSourceContent"]},{"name":"open override fun canRelocateClass(className: String): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.canRelocateClass","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/can-relocate-class.html","searchKeys":["canRelocateClass","open override fun canRelocateClass(className: String): Boolean","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.canRelocateClass"]},{"name":"open override fun canRelocatePath(path: String): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.canRelocatePath","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/can-relocate-path.html","searchKeys":["canRelocatePath","open override fun canRelocatePath(path: String): Boolean","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.canRelocatePath"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheLicenseResourceTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-license-resource-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheLicenseResourceTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-dont-include-resource-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-log4j2-plugins-cache-file-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-no-op-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.canTransformResource"]},{"name":"open override fun canTransformResource(element: FileTreeElement): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.canTransformResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/can-transform-resource.html","searchKeys":["canTransformResource","open override fun canTransformResource(element: FileTreeElement): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.canTransformResource"]},{"name":"open override fun dependencies(action: Action<DependencyFilter>?): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.dependencies","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/dependencies.html","searchKeys":["dependencies","open override fun dependencies(action: Action<DependencyFilter>?): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.dependencies"]},{"name":"open override fun execute(stream: CopyActionProcessingStream): WorkResult","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.execute","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-copy-action/execute.html","searchKeys":["execute","open override fun execute(stream: CopyActionProcessingStream): WorkResult","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.execute"]},{"name":"open override fun getEffectiveManifest(): DefaultManifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.getEffectiveManifest","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-default-inherit-manifest/get-effective-manifest.html","searchKeys":["getEffectiveManifest","open override fun getEffectiveManifest(): DefaultManifest","com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.getEffectiveManifest"]},{"name":"open override fun getExcludes(): MutableSet<String>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.getExcludes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/get-excludes.html","searchKeys":["getExcludes","open override fun getExcludes(): MutableSet<String>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.getExcludes"]},{"name":"open override fun getExcludes(): MutableSet<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.getExcludes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/get-excludes.html","searchKeys":["getExcludes","open override fun getExcludes(): MutableSet<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.getExcludes"]},{"name":"open override fun getIncludes(): MutableSet<String>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.getIncludes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/get-includes.html","searchKeys":["getIncludes","open override fun getIncludes(): MutableSet<String>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.getIncludes"]},{"name":"open override fun getIncludes(): MutableSet<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.getIncludes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/get-includes.html","searchKeys":["getIncludes","open override fun getIncludes(): MutableSet<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.getIncludes"]},{"name":"open override fun getManifest(): InheritManifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.getManifest","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/get-manifest.html","searchKeys":["getManifest","open override fun getManifest(): InheritManifest","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.getManifest"]},{"name":"open override fun getName(): String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.getName","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/get-name.html","searchKeys":["getName","open override fun getName(): String","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.getName"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-log4j2-plugins-cache-file-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-no-op-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.hasTransformedResource"]},{"name":"open override fun hasTransformedResource(): Boolean","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.hasTransformedResource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/has-transformed-resource.html","searchKeys":["hasTransformedResource","open override fun hasTransformedResource(): Boolean","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.hasTransformedResource"]},{"name":"open override fun hashCode(): Int","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.hashCode","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.hashCode"]},{"name":"open override fun inheritFrom(vararg inheritPaths: Any): InheritManifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.inheritFrom","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-default-inherit-manifest/inherit-from.html","searchKeys":["inheritFrom","open override fun inheritFrom(vararg inheritPaths: Any): InheritManifest","com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.inheritFrom"]},{"name":"open override fun inheritFrom(vararg inheritPaths: Any, action: Action<*>?): InheritManifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.inheritFrom","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-default-inherit-manifest/inherit-from.html","searchKeys":["inheritFrom","open override fun inheritFrom(vararg inheritPaths: Any, action: Action<*>?): InheritManifest","com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.inheritFrom"]},{"name":"open override fun mergeGroovyExtensionModules(): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeGroovyExtensionModules","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/merge-groovy-extension-modules.html","searchKeys":["mergeGroovyExtensionModules","open override fun mergeGroovyExtensionModules(): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeGroovyExtensionModules"]},{"name":"open override fun mergeServiceFiles(): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeServiceFiles","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/merge-service-files.html","searchKeys":["mergeServiceFiles","open override fun mergeServiceFiles(): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeServiceFiles"]},{"name":"open override fun mergeServiceFiles(action: Action<ServiceFileTransformer>?): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeServiceFiles","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/merge-service-files.html","searchKeys":["mergeServiceFiles","open override fun mergeServiceFiles(action: Action<ServiceFileTransformer>?): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeServiceFiles"]},{"name":"open override fun mergeServiceFiles(rootPath: String): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeServiceFiles","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/merge-service-files.html","searchKeys":["mergeServiceFiles","open override fun mergeServiceFiles(rootPath: String): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.mergeServiceFiles"]},{"name":"open override fun minimize(): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.minimize","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/minimize.html","searchKeys":["minimize","open override fun minimize(): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.minimize"]},{"name":"open override fun minimize(action: Action<DependencyFilter>?): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.minimize","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/minimize.html","searchKeys":["minimize","open override fun minimize(action: Action<DependencyFilter>?): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.minimize"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-log4j2-plugins-cache-file-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-no-op-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.modifyOutputStream"]},{"name":"open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.modifyOutputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/modify-output-stream.html","searchKeys":["modifyOutputStream","open override fun modifyOutputStream(os: ZipOutputStream, preserveFileTimestamps: Boolean)","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.modifyOutputStream"]},{"name":"open override fun relocate(clazz: Class<Relocator>): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocate.html","searchKeys":["relocate","open override fun relocate(clazz: Class<Relocator>): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate"]},{"name":"open override fun relocate(pattern: String, destination: String): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocate.html","searchKeys":["relocate","open override fun relocate(pattern: String, destination: String): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate"]},{"name":"open override fun relocate(pattern: String, destination: String, action: Action<SimpleRelocator>?): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocate.html","searchKeys":["relocate","open override fun relocate(pattern: String, destination: String, action: Action<SimpleRelocator>?): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate"]},{"name":"open override fun relocate(relocator: Relocator): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocate.html","searchKeys":["relocate","open override fun relocate(relocator: Relocator): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocate"]},{"name":"open override fun relocateClass(context: RelocateClassContext): String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.relocateClass","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/relocate-class.html","searchKeys":["relocateClass","open override fun relocateClass(context: RelocateClassContext): String","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.relocateClass"]},{"name":"open override fun relocatePath(context: RelocatePathContext): String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.relocatePath","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/relocate-path.html","searchKeys":["relocatePath","open override fun relocatePath(context: RelocatePathContext): String","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.relocatePath"]},{"name":"open override fun transform(clazz: Class<Transformer>): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/transform.html","searchKeys":["transform","open override fun transform(clazz: Class<Transformer>): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-components-xml-resource-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.ComponentsXmlResourceTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-groovy-extension-module-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.GroovyExtensionModuleTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-log4j2-plugins-cache-file-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-no-op-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.NoOpTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.transform"]},{"name":"open override fun transform(context: TransformerContext)","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/transform.html","searchKeys":["transform","open override fun transform(context: TransformerContext)","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.transform"]},{"name":"open override fun transform(transformer: Transformer): ShadowJar","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transform","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/transform.html","searchKeys":["transform","open override fun transform(transformer: Transformer): ShadowJar","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transform"]},{"name":"open override fun writeTo(path: Any): Manifest","description":"com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.writeTo","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-default-inherit-manifest/write-to.html","searchKeys":["writeTo","open override fun writeTo(path: Any): Manifest","com.github.jengelman.gradle.plugins.shadow.tasks.DefaultInheritManifest.writeTo"]},{"name":"open val addHeader: Property<Boolean>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.addHeader","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/add-header.html","searchKeys":["addHeader","open val addHeader: Property<Boolean>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.addHeader"]},{"name":"open val apiJars: ConfigurableFileCollection","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.apiJars","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/api-jars.html","searchKeys":["apiJars","open val apiJars: ConfigurableFileCollection","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.apiJars"]},{"name":"open val attributes: SetProperty<Pair<String, Comparable<*>>>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.attributes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/attributes.html","searchKeys":["attributes","open val attributes: SetProperty<Pair<String, Comparable<*>>>","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.attributes"]},{"name":"open val charsetName: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.charsetName","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/charset-name.html","searchKeys":["charsetName","open val charsetName: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.charsetName"]},{"name":"open val charsetName: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.charsetName","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/charset-name.html","searchKeys":["charsetName","open val charsetName: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.charsetName"]},{"name":"open val configurations: SetProperty<Configuration>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.configurations","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/configurations.html","searchKeys":["configurations","open val configurations: SetProperty<Configuration>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.configurations"]},{"name":"open val copyright: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.copyright","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/copyright.html","searchKeys":["copyright","open val copyright: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.copyright"]},{"name":"open val dependencyFilter: Property<DependencyFilter>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.dependencyFilter","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/dependency-filter.html","searchKeys":["dependencyFilter","open val dependencyFilter: Property<DependencyFilter>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.dependencyFilter"]},{"name":"open val enableRelocation: Property<Boolean>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.enableRelocation","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/enable-relocation.html","searchKeys":["enableRelocation","open val enableRelocation: Property<Boolean>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.enableRelocation"]},{"name":"open val file: RegularFileProperty","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.file","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/file.html","searchKeys":["file","open val file: RegularFileProperty","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.file"]},{"name":"open val ignoreDtd: Property<Boolean>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.ignoreDtd","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/ignore-dtd.html","searchKeys":["ignoreDtd","open val ignoreDtd: Property<Boolean>","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.ignoreDtd"]},{"name":"open val inceptionYear: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.inceptionYear","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/inception-year.html","searchKeys":["inceptionYear","open val inceptionYear: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.inceptionYear"]},{"name":"open val includedDependencies: ConfigurableFileCollection","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.includedDependencies","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/included-dependencies.html","searchKeys":["includedDependencies","open val includedDependencies: ConfigurableFileCollection","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.includedDependencies"]},{"name":"open val mainClass: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.mainClass","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/main-class.html","searchKeys":["mainClass","open val mainClass: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.mainClass"]},{"name":"open val manifestEntries: MapProperty<String, Attributes>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.manifestEntries","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/manifest-entries.html","searchKeys":["manifestEntries","open val manifestEntries: MapProperty<String, Attributes>","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.manifestEntries"]},{"name":"open val mappings: MapProperty<String, Map<String, String>>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.mappings","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/mappings.html","searchKeys":["mappings","open val mappings: MapProperty<String, Map<String, String>>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.mappings"]},{"name":"open val mergeSeparator: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.mergeSeparator","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/merge-separator.html","searchKeys":["mergeSeparator","open val mergeSeparator: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.mergeSeparator"]},{"name":"open val mergeStrategy: Property<PropertiesFileTransformer.MergeStrategy>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.mergeStrategy","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/merge-strategy.html","searchKeys":["mergeStrategy","open val mergeStrategy: Property<PropertiesFileTransformer.MergeStrategy>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.mergeStrategy"]},{"name":"open val minimizeJar: Property<Boolean>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.minimizeJar","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/minimize-jar.html","searchKeys":["minimizeJar","open val minimizeJar: Property<Boolean>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.minimizeJar"]},{"name":"open val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer/object-factory.html","searchKeys":["objectFactory","open val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.Transformer.objectFactory"]},{"name":"open val organizationName: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.organizationName","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/organization-name.html","searchKeys":["organizationName","open val organizationName: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.organizationName"]},{"name":"open val organizationURL: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.organizationURL","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/organization-u-r-l.html","searchKeys":["organizationURL","open val organizationURL: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.organizationURL"]},{"name":"open val paths: SetProperty<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.paths","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/paths.html","searchKeys":["paths","open val paths: SetProperty<String>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.paths"]},{"name":"open val preamble1: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.preamble1","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/preamble1.html","searchKeys":["preamble1","open val preamble1: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.preamble1"]},{"name":"open val preamble2: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.preamble2","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/preamble2.html","searchKeys":["preamble2","open val preamble2: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.preamble2"]},{"name":"open val preamble3: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.preamble3","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/preamble3.html","searchKeys":["preamble3","open val preamble3: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.preamble3"]},{"name":"open val projectName: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.projectName","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/project-name.html","searchKeys":["projectName","open val projectName: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.projectName"]},{"name":"open val relocationPrefix: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocationPrefix","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocation-prefix.html","searchKeys":["relocationPrefix","open val relocationPrefix: Property<String>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocationPrefix"]},{"name":"open val relocators: SetProperty<Relocator>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocators","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/relocators.html","searchKeys":["relocators","open val relocators: SetProperty<Relocator>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.relocators"]},{"name":"open val resource: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.resource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/resource.html","searchKeys":["resource","open val resource: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.resource"]},{"name":"open val resource: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.resource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-dont-include-resource-transformer/resource.html","searchKeys":["resource","open val resource: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.resource"]},{"name":"open val resource: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.resource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/resource.html","searchKeys":["resource","open val resource: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.resource"]},{"name":"open val resource: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.resource","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/resource.html","searchKeys":["resource","open val resource: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.resource"]},{"name":"open val separator: Property<String>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.separator","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/separator.html","searchKeys":["separator","open val separator: Property<String>","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.separator"]},{"name":"open val sourceSetsClassesDirs: ConfigurableFileCollection","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.sourceSetsClassesDirs","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/source-sets-classes-dirs.html","searchKeys":["sourceSetsClassesDirs","open val sourceSetsClassesDirs: ConfigurableFileCollection","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.sourceSetsClassesDirs"]},{"name":"open val toMinimize: ConfigurableFileCollection","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.toMinimize","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/to-minimize.html","searchKeys":["toMinimize","open val toMinimize: ConfigurableFileCollection","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.toMinimize"]},{"name":"open val transformers: SetProperty<Transformer>","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transformers","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-jar/transformers.html","searchKeys":["transformers","open val transformers: SetProperty<Transformer>","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar.transformers"]},{"name":"open var keyTransformer: (String) -> String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.keyTransformer","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/key-transformer.html","searchKeys":["keyTransformer","open var keyTransformer: (String) -> String","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.keyTransformer"]},{"name":"open var path: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.path","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-service-file-transformer/path.html","searchKeys":["path","open var path: String","com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer.path"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-apache-notice-resource-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.ApacheNoticeResourceTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-appending-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-dont-include-resource-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.DontIncludeResourceTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-include-resource-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.IncludeResourceTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-appender-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestAppenderTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-manifest-resource-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.ManifestResourceTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.objectFactory"]},{"name":"override val objectFactory: ObjectFactory","description":"com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.objectFactory","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-xml-appending-transformer/object-factory.html","searchKeys":["objectFactory","override val objectFactory: ObjectFactory","com.github.jengelman.gradle.plugins.shadow.transformers.XmlAppendingTransformer.objectFactory"]},{"name":"val CONSTANT_TIME_FOR_ZIP_ENTRIES: Long","description":"com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.Companion.CONSTANT_TIME_FOR_ZIP_ENTRIES","location":"shadow/com.github.jengelman.gradle.plugins.shadow.tasks/-shadow-copy-action/-companion/-c-o-n-s-t-a-n-t_-t-i-m-e_-f-o-r_-z-i-p_-e-n-t-r-i-e-s.html","searchKeys":["CONSTANT_TIME_FOR_ZIP_ENTRIES","val CONSTANT_TIME_FOR_ZIP_ENTRIES: Long","com.github.jengelman.gradle.plugins.shadow.tasks.ShadowCopyAction.Companion.CONSTANT_TIME_FOR_ZIP_ENTRIES"]},{"name":"val ConfigurationContainer.shadow: NamedDomainObjectProvider<Configuration>","description":"com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.shadow","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-base-plugin/-companion/shadow.html","searchKeys":["shadow","val ConfigurationContainer.shadow: NamedDomainObjectProvider<Configuration>","com.github.jengelman.gradle.plugins.shadow.ShadowBasePlugin.Companion.shadow"]},{"name":"val ConfigurationContainer.shadowRuntimeElements: NamedDomainObjectProvider<Configuration>","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.shadowRuntimeElements","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/-companion/shadow-runtime-elements.html","searchKeys":["shadowRuntimeElements","val ConfigurationContainer.shadowRuntimeElements: NamedDomainObjectProvider<Configuration>","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.shadowRuntimeElements"]},{"name":"val ROLE: String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.Companion.ROLE","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocator/-companion/-r-o-l-e.html","searchKeys":["ROLE","val ROLE: String","com.github.jengelman.gradle.plugins.shadow.relocation.Relocator.Companion.ROLE"]},{"name":"val TaskContainer.installShadowDist: TaskProvider<Sync>","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.installShadowDist","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-companion/install-shadow-dist.html","searchKeys":["installShadowDist","val TaskContainer.installShadowDist: TaskProvider<Sync>","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.installShadowDist"]},{"name":"val TaskContainer.shadowJar: TaskProvider<ShadowJar>","description":"com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.shadowJar","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-java-plugin/-companion/shadow-jar.html","searchKeys":["shadowJar","val TaskContainer.shadowJar: TaskProvider<ShadowJar>","com.github.jengelman.gradle.plugins.shadow.ShadowJavaPlugin.Companion.shadowJar"]},{"name":"val TaskContainer.startShadowScripts: TaskProvider<CreateStartScripts>","description":"com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.startShadowScripts","location":"shadow/com.github.jengelman.gradle.plugins.shadow/-shadow-application-plugin/-companion/start-shadow-scripts.html","searchKeys":["startShadowScripts","val TaskContainer.startShadowScripts: TaskProvider<CreateStartScripts>","com.github.jengelman.gradle.plugins.shadow.ShadowApplicationPlugin.Companion.startShadowScripts"]},{"name":"val className: String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.RelocateClassContext.className","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocate-class-context/class-name.html","searchKeys":["className","val className: String","com.github.jengelman.gradle.plugins.shadow.relocation.RelocateClassContext.className"]},{"name":"val entries: EnumEntries<PropertiesFileTransformer.MergeStrategy>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.entries","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-properties-file-transformer/-merge-strategy/entries.html","searchKeys":["entries","val entries: EnumEntries<PropertiesFileTransformer.MergeStrategy>","com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer.MergeStrategy.entries"]},{"name":"val excludes: MutableSet<String>","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.excludes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/excludes.html","searchKeys":["excludes","val excludes: MutableSet<String>","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.excludes"]},{"name":"val includes: MutableSet<String>","description":"com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.includes","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-simple-relocator/includes.html","searchKeys":["includes","val includes: MutableSet<String>","com.github.jengelman.gradle.plugins.shadow.relocation.SimpleRelocator.includes"]},{"name":"val inputStream: InputStream","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.inputStream","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/input-stream.html","searchKeys":["inputStream","val inputStream: InputStream","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.inputStream"]},{"name":"val path: String","description":"com.github.jengelman.gradle.plugins.shadow.relocation.RelocatePathContext.path","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocate-path-context/path.html","searchKeys":["path","val path: String","com.github.jengelman.gradle.plugins.shadow.relocation.RelocatePathContext.path"]},{"name":"val path: String","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.path","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/path.html","searchKeys":["path","val path: String","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.path"]},{"name":"val relocators: Set<Relocator>","description":"com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.relocators","location":"shadow/com.github.jengelman.gradle.plugins.shadow.transformers/-transformer-context/relocators.html","searchKeys":["relocators","val relocators: Set<Relocator>","com.github.jengelman.gradle.plugins.shadow.transformers.TransformerContext.relocators"]},{"name":"value class RelocateClassContext(val className: String)","description":"com.github.jengelman.gradle.plugins.shadow.relocation.RelocateClassContext","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocate-class-context/index.html","searchKeys":["RelocateClassContext","value class RelocateClassContext(val className: String)","com.github.jengelman.gradle.plugins.shadow.relocation.RelocateClassContext"]},{"name":"value class RelocatePathContext(val path: String)","description":"com.github.jengelman.gradle.plugins.shadow.relocation.RelocatePathContext","location":"shadow/com.github.jengelman.gradle.plugins.shadow.relocation/-relocate-path-context/index.html","searchKeys":["RelocatePathContext","value class RelocatePathContext(val path: String)","com.github.jengelman.gradle.plugins.shadow.relocation.RelocatePathContext"]}]